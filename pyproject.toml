[project]
name = "Vietnamese-Medical-RAG-QA-System"
version = "0.0.1"
description = "Vietnamese Medical RAG QA System delivers accurate, evidence-based answers to Vietnamese medical questions by combining domain-specific document retrieval with a large language model. It supports queries on symptoms, drug usage, and clinical guidelines for both healthcare professionals and the public."
authors = [{ name = "minhquana1906", email = "quann1906@gmail.com" }]
readme = "README.md"
keywords = ['python']
requires-python = ">=3.12,<3.13"
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "llama-index-embeddings-huggingface>=0.2.3",
]

[project.urls]
Homepage = "https://minhhquana1906.github.io/Vietnamese-Medical-RAG-QA-System/"
Repository = "https://github.com/minhhquana1906/Vietnamese-Medical-RAG-QA-System"
Documentation = "https://minhhquana1906.github.io/Vietnamese-Medical-RAG-QA-System/"

[dependency-groups]
dev = [
    "pytest>=7.2.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.1",
    "httpx>=0.25.0",  # For FastAPI testing
    "pre-commit>=2.20.0",
    "tox-uv>=1.11.3",
    "mypy>=0.991",
    "ruff>=0.11.5",
]
backend = [
    "alembic>=1.16.5",
    "celery==5.4.0",
    "cohere>=5.18.0",
    "databases==0.9.0",
    "dotenv>=0.9.9",
    "fastapi==0.112.2",
    "function-schema>=0.4.5",
    "llama-index>=0.10.56",
    "llama-index-core>=0.10.57,<0.11.0",
    "llama-index-llms-openai==0.1.31",
    "loguru==0.7.3",
    "nltk>=3.9.1",
    "openai>=1.56.1",
    "packaging>=24.1",
    "psycopg2-binary>=2.9.10",
    "pydantic-settings>=2.11.0",
    "python-decouple==3.8",
    "pyyaml>=6.0.2",
    "qdrant-client==1.10.1",
    "redis==5.0.7",
    "sqlalchemy==2.0.32",
    "tavily-python>=0.7.12",
    "types-pyyaml>=6.0.12.20250915",
    "uvicorn==0.30.6",
]
frontend = [
    "requests==2.32.3",
    "streamlit==1.36.0",
    "tenacity>=8.5.0",
    "loguru==0.7.3",
]


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.mypy]
files = ["backend/src"]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Allow gradual typing
ignore_missing_imports = true
show_error_codes = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
]
markers = [
    "integration: integration tests",
    "unit: unit tests",
]

[tool.ruff]
target-version = "py39"
line-length = 120
fix = true

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    # "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
    "TRY",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.format]
preview = true
