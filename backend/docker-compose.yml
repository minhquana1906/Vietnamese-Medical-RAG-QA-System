services:
  qdrant_db:
    image: qdrant/qdrant:v1.15.1
    container_name: qdrant_db
    restart: always
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - medical_rag_qa_network

  valkey_db:
    image: valkey/valkey:bookworm
    container_name: valkey_db
    restart: always
    ports:
      - "6379:6379"
    command:
      - "--save 60 1"
    volumes:
      - valkey_data:/data
    networks:
      - medical_rag_qa_network

  chatbot_api:
    build:
      context: ..
      dockerfile: backend/Dockerfile
    container_name: chatbot_api
    restart: always
    ports:
      - "8000:8000"
    command: /bin/bash -c "python scripts/init_nltk.py && uvicorn src.main:app --host 0.0.0.0 --port 8000 --workers 2 --log-level info"
    env_file:
      - .env
    depends_on:
      - qdrant_db
      - valkey_db
    volumes:
      - nltk_data:/app/nltk_data
      - .:/app/backend
    networks:
      - medical_rag_qa_network

  chatbot_worker:
    build:
      context: ..
      dockerfile: backend/Dockerfile
    container_name: chatbot_worker
    restart: always
    env_file:
      - .env
    depends_on:
      - valkey_db
      - chatbot_api
    command: /bin/bash -c "mkdir -p /app/logs/worker && chown -R app:app /app/logs/worker && celery -A src.tasks.celery_app worker --loglevel=debug --logfile /app/logs/worker/worker.log"
    volumes:
      - .:/app/backend
      - worker_volume:/app/logs/worker
      - nltk_data:/app/nltk_data
    networks:
      - medical_rag_qa_network

networks:
  medical_rag_qa_network:
    external: true

volumes:
  qdrant_data:
  valkey_data:
  worker_volume:
  nltk_data:
